class SpawnTool : ScriptComponent
{
    var GameViewport : GameViewport = null;
    var Index : Integer = 0;
    var CameraCog : Cog = null;
    
    constructor() : base()
    {
    }

    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, "ActivateTool", this.OnActivateTool);
        Zero.Connect(this.Owner, "DeactivateTool", this.OnDeativateTool);
    }
    
    function OnActivateTool(e : ToolChangeEvent)
    {
        this.CameraCog = e.CameraCog;
        Zero.Connect(e.Peer as Cog, Events.LockStepMouseDown, this.LockStepMouseDown);
    }
    
    function OnDeativateTool(e : ToolChangeEvent)
    {
        this.CameraCog = null;
        Zero.Disconnect(e.Peer as Cog, Events.LockStepMouseDown, this as Component);
    }
    
    function LockStepMouseDown(e : LockStepMouseButtonEvent)
    {
        if(Zero.Keyboard.KeyIsDown(Keys.Shift))
        {
            this.DestroyObj(e);
        }
        else
        {
            this.SpawnObj(e, "Cube");
        }
        
    }
    
    function SpawnObj(e : LockStepMouseButtonEvent, objToSpawn : String)
    {
        var dir = this.CameraCog.Orientation.GetWorldForward();
        var start = this.CameraCog.Transform.WorldTranslation;
        
        var hitObj : Cog = null;
        var hitNormal = local Real3(0.0, 0.0, 0.0);
        
        var castResults = this.Space.PhysicsSpace.CastRayResults(start, dir, 1);
        foreach(var castResult in castResults)
        {
            hitObj = castResult.GetObjectHit();
            if(hitObj != null)
            {
                hitNormal = castResult.GetNormal();
                break;
            }
        }
        
        if(hitObj == null)
        {
            return;
        }
        
        if(hitObj.BlockScript == null)
        {
            return;
        }
        
        var localNormal = hitObj.Transform.TransformNormalInverse(hitNormal);
        var newObjPos = localNormal;
        
        var newObj = this.Space.CreateAtPosition("Cube", newObjPos);
        newObj.RigidBody.Static = true;
        newObj.AttachTo(hitObj);
    }
    
    function DestroyObj(e : LockStepMouseButtonEvent)
    {
        var dir = this.CameraCog.Orientation.GetWorldForward();
        var start = this.CameraCog.Transform.WorldTranslation;
        
        var hitObj : Cog = null;
        var hitNormal = local Real3(0.0, 0.0, 0.0);
        
        var castResults = this.Space.PhysicsSpace.CastRayResults(start, dir, 1);
        foreach(var castResult in castResults)
        {
            hitObj = castResult.GetObjectHit();
            
            if(hitObj != null)
            {
                if(hitObj.BlockScript != null)
                {
                    hitObj.Destroy();
                    return;
                }
            }
        }
    }
}
