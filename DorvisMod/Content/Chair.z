class Chair : ScriptComponent
{
    var ActivePlayerCog : Cog = null;
    
    constructor() : base()
    {
    }

    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, "TestInteract", this.OnTestInteract);
        Zero.Connect(this.Owner, "Interact", this.OnInteract);
    }

    function OnTestInteract(e : InteractEvent)
    {
        if (this.ActivePlayerCog == null)
        {
            e.Message = "sit down in the chair";
        }
        else if (e.PlayerCog == this.ActivePlayerCog)
        {
            e.Message = "get out of the chair";
        }
    }

    function OnInteract(e : InteractEvent)
    {
        // Are we trying to get in?
        if (this.ActivePlayerCog == null)
        {
            // The player could already be sitting in a chair, notify anyone of this change
            e.Player.SendPlayerEventTo("ChangeChairs", e.PlayerCog);
            
            e.Player.Deactivate();
            e.Player.ResetRotationAngles();
            e.PlayerCog.AttachTo(this.Owner);
            e.PlayerCog.Transform.Translation = local Real3();
            e.PlayerCog.Transform.Rotation = local Quat();
            e.Player.FreezeMouseInput = true;
            
            this.ActivePlayerCog = e.PlayerCog;
            
            Zero.Connect(e.PlayerCog, "PlayerKeyDown", this.OnPlayerKeyDown);
            Zero.Connect(e.PlayerCog, "PlayerKeyUp", this.OnPlayerKeyUp);
            Zero.Connect(e.PlayerCog, "PlayerMouseMove", this.OnPlayerMouseMove);
            
            Zero.Connect(e.PlayerCog, "ChangeChairs", this.OnChangeChairs);
        }
        // Otherwise, we're trying to get out
        else if (e.PlayerCog == this.ActivePlayerCog)
        {
            this.UnseatPlayer();
        }
    }
    
    function UnseatPlayer()
    {
        var playerCog = this.ActivePlayerCog;
        this.ActivePlayerCog = null;
        
        playerCog.DetachRelative();
        playerCog.Player.Activate();
        playerCog.Player.FreezeMouseInput = false;
        
        Zero.Disconnect(playerCog, "PlayerKeyDown", this as Component);
        Zero.Disconnect(playerCog, "PlayerKeyUp", this as Component);
        Zero.Disconnect(playerCog, "PlayerMouseMove", this as Component);
        Zero.Disconnect(playerCog, "ChangeChairs", this as Component);
    }
    
    function OnPlayerKeyDown(e : PlayerKeyEvent)
    {
        if(e.Key == Keys.Back && this.ActivePlayerCog == e.PlayerCog)
        {
            this.UnseatPlayer();
            return;
        }
        
        var root = this.Owner.GetRoot();
        root.DispatchEvent("PlayerKeyDown", e as Event);
    }
    
    function OnPlayerKeyUp(e : PlayerKeyEvent)
    {
        var root = this.Owner.GetRoot();
        root.DispatchEvent("PlayerKeyUp", e as Event);
    }
    
    function OnPlayerMouseMove(e : PlayerMouseEvent)
    {
        var root = this.Owner.GetRoot();
        root.DispatchEvent("PlayerMouseMove", e as Event);
    }
    
    function OnChangeChairs(e : PlayerEvent)
    {
        this.UnseatPlayer();
    }
}
