class Activatable : ScriptComponent
{
    // The default key is spacebar
    [Editable][Serialized]
    var Key : Integer = 87;
    
    var Root : Cog = null;
    
    constructor() : base()
    {
    }

    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner as Cog, Events.Attached, this.OnAttached);
        this.Setup();
    }
    
    function OnAttached(e : HierarchyEvent)
    {
        this.Setup();
    }
    
    // Setup can be called multiple times, but it MUST be called any time our hierarchy is changed
    function Setup()
    {
        var root = this.Owner.GetRoot();
        
        if (this.Root != null)
        {
            Zero.Disconnect(this.Root, "PlayerKeyDown", this as Component);
            Zero.Disconnect(this.Root, "PlayerKeyUp", this as Component);
        }
        
        Zero.Connect(root, "PlayerKeyDown", this.OnKeyDown);
        Zero.Connect(root, "PlayerKeyUp", this.OnKeyUp);
        
        this.Root = root;
    }
    
    function OnKeyDown(e : PlayerKeyEvent)
    {
        if (e.Key == this.Key)
        {
            this.Owner.DispatchEvent("Activate", e as Event);
        }
    }
    
    function OnKeyUp(e : PlayerKeyEvent)
    {
        if (e.Key == this.Key)
        {
            this.Owner.DispatchEvent("Deactivate", e as Event);
        }
    }
}



